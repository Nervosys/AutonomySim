
.. _program_listing_file_AutonomyLib_include_sensors_distance_DistanceBase.hpp:

Program Listing for File DistanceBase.hpp
=========================================

|exhale_lsh| :ref:`Return to documentation for file <file_AutonomyLib_include_sensors_distance_DistanceBase.hpp>` (``AutonomyLib/include/sensors/distance/DistanceBase.hpp``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   // Copyright (c) Microsoft Corporation. All rights reserved.
   // Licensed under the MIT License.
   
   #ifndef autonomylib_sensors_DistanceBase_hpp
   #define autonomylib_sensors_DistanceBase_hpp
   
   #include "sensors/SensorBase.hpp"
   
   namespace nervosys {
   namespace autonomylib {
   
   class DistanceBase : public SensorBase {
   
     public:
       DistanceBase(const std::string &sensor_name = "") : SensorBase(sensor_name) {}
   
       virtual void reportState(StateReporter &reporter) override {
           // call base
           UpdatableObject::reportState(reporter);
           reporter.writeValue("Dist-Curr", output_.distance);
       }
   
       const DistanceSensorData &getOutput() const { return output_; }
   
     protected:
       void setOutput(const DistanceSensorData &output) { output_ = output; }
   
     private:
       DistanceSensorData output_;
   };
   
   } // namespace autonomylib
   } // namespace nervosys
   
   #endif
