
.. _program_listing_file_AutonomyLib_include_vehicles_multirotor_api_MultirotorRpcLibServer.hpp:

Program Listing for File MultirotorRpcLibServer.hpp
===================================================

|exhale_lsh| :ref:`Return to documentation for file <file_AutonomyLib_include_vehicles_multirotor_api_MultirotorRpcLibServer.hpp>` (``AutonomyLib/include/vehicles/multirotor/api/MultirotorRpcLibServer.hpp``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   // Copyright (c) Microsoft Corporation. All rights reserved.
   // Licensed under the MIT License.
   
   #ifndef autonomylib_vehicles_MultirotorRpcLibServer_hpp
   #define autonomylib_vehicles_MultirotorRpcLibServer_hpp
   
   #include "api/RpcLibServerBase.hpp"
   #include "common/Common.hpp"
   #include "vehicles/multirotor/api/MultirotorApiBase.hpp"
   #include <functional>
   
   namespace nervosys {
   namespace autonomylib {
   
   class MultirotorRpcLibServer : public RpcLibServerBase {
   
     protected:
       virtual MultirotorApiBase *getVehicleApi(const std::string &vehicle_name) override {
           return static_cast<MultirotorApiBase *>(RpcLibServerBase::getVehicleApi(vehicle_name));
       }
   
     public:
       MultirotorRpcLibServer(ApiProvider *api_provider, string server_address, uint16_t port = RpcLibPort);
       virtual ~MultirotorRpcLibServer();
   };
   
   } // namespace autonomylib
   } // namespace nervosys
   
   #endif
