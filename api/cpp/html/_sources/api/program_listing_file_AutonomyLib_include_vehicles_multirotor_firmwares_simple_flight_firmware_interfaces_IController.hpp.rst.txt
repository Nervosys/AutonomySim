
.. _program_listing_file_AutonomyLib_include_vehicles_multirotor_firmwares_simple_flight_firmware_interfaces_IController.hpp:

Program Listing for File IController.hpp
========================================

|exhale_lsh| :ref:`Return to documentation for file <file_AutonomyLib_include_vehicles_multirotor_firmwares_simple_flight_firmware_interfaces_IController.hpp>` (``AutonomyLib/include/vehicles/multirotor/firmwares/simple_flight/firmware/interfaces/IController.hpp``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #ifndef autonomylib_vehicles_simpleflight_firmware_IController_hpp
   #define autonomylib_vehicles_simpleflight_firmware_IController_hpp
   
   #include "IBoardClock.hpp"
   #include "IGoal.hpp"
   #include "IStateEstimator.hpp"
   #include "IUpdatable.hpp"
   
   #include <cstdint>
   
   namespace simple_flight {
   
   class IController : public IUpdatable {
   
     public:
       virtual void initialize(const IGoal *goal, const IStateEstimator *state_estimator) = 0;
       virtual const Axis4r &getOutput() = 0;
       virtual bool isLastGoalModeAllPassthrough() = 0;
   };
   
   } // namespace simple_flight
   
   #endif
