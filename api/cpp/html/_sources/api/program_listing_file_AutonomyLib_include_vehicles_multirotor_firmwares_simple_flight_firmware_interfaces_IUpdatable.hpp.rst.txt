
.. _program_listing_file_AutonomyLib_include_vehicles_multirotor_firmwares_simple_flight_firmware_interfaces_IUpdatable.hpp:

Program Listing for File IUpdatable.hpp
=======================================

|exhale_lsh| :ref:`Return to documentation for file <file_AutonomyLib_include_vehicles_multirotor_firmwares_simple_flight_firmware_interfaces_IUpdatable.hpp>` (``AutonomyLib/include/vehicles/multirotor/firmwares/simple_flight/firmware/interfaces/IUpdatable.hpp``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #ifndef autonomylib_vehicles_simpleflight_firmware_IUpdatable_hpp
   #define autonomylib_vehicles_simpleflight_firmware_IUpdatable_hpp
   
   namespace simple_flight {
   
   class IUpdatable {
   
     private:
       bool reset_called = false;
       bool update_called = false;
   
     protected:
       void clearResetUpdateAsserts() {
           reset_called = false;
           update_called = false;
       }
   
     public:
       virtual void reset() {
           if (reset_called && !update_called)
               throw std::runtime_error("Multiple reset() calls detected without call to update()");
   
           reset_called = true;
       }
   
       virtual void update() {
           if (!reset_called)
               throw std::runtime_error("reset() must be called first before update()");
           update_called = true;
       }
   
       virtual ~IUpdatable() = default;
   };
   
   } // namespace simple_flight
   
   #endif
