
.. _program_listing_file_AutonomyLib_include_vehicles_car_api_CarRpcLibServer.hpp:

Program Listing for File CarRpcLibServer.hpp
============================================

|exhale_lsh| :ref:`Return to documentation for file <file_AutonomyLib_include_vehicles_car_api_CarRpcLibServer.hpp>` (``AutonomyLib/include/vehicles/car/api/CarRpcLibServer.hpp``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   // Copyright (c) Microsoft Corporation. All rights reserved.
   // Licensed under the MIT License.
   
   #ifndef autonomylib_vehicles_CarRpcLibServer_hpp
   #define autonomylib_vehicles_CarRpcLibServer_hpp
   
   #ifndef AUTONOMYLIB_NO_RPC
   
   #include "api/RpcLibServerBase.hpp"
   #include "common/Common.hpp"
   #include "vehicles/car/api/CarApiBase.hpp"
   #include <functional>
   
   namespace nervosys {
   namespace autonomylib {
   
   class CarRpcLibServer : public RpcLibServerBase {
     public:
       CarRpcLibServer(ApiProvider *api_provider, string server_address, uint16_t port = RpcLibPort);
       virtual ~CarRpcLibServer();
   
     protected:
       virtual CarApiBase *getVehicleApi(const std::string &vehicle_name) override {
           return static_cast<CarApiBase *>(RpcLibServerBase::getVehicleApi(vehicle_name));
       }
   };
   
   #endif
   
   } // namespace autonomylib
   } // namespace nervosys
   
   #endif
